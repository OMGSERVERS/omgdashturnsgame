local runtime_messages = require("server.runtime_utils.runtime_messages")
local omgruntime = require("omgservers.omgruntime.omgruntime")

local LOBBY_RUNTIME = "lobby_runtime#lobby_runtime"
local MATCH_RUNTIME = "match_runtime#match_runtime"

local function server_started(self, runtime_qualifier)
	print(socket.gettime() .. " [SERVER_MANAGER] Server was started, qualifier=" .. runtime_qualifier)
	self.runtime_qualifier = runtime_qualifier
end

local function command_received(self, command_qualifier, command_body)
	local runtime_qualifier = self.runtime_qualifier

	local runtime_message = runtime_messages:command_received(command_qualifier, command_body)

	if runtime_qualifier == omgruntime.constants.LOBBY then
		msg.post(LOBBY_RUNTIME, runtime_messages.COMMAND_RECEIVED, runtime_message)
	elseif runtime_qualifier == omgruntime.constants.MATCH then
		msg.post(MATCH_RUNTIME, runtime_messages.COMMAND_RECEIVED, runtime_message)
	else
		error("[SERVER_MANAGER] Unknown runtime qualifier was received, runtime_qualifier=" .. tostring(runtime_qualifier))
	end
end

local function message_received(self, client_id, decoded_message)
	local runtime_qualifier = self.runtime_qualifier

	print(socket.gettime() .. " [SERVER_MANAGER] Message was received, client_id=" .. client_id .. ", message=" .. json.encode(decoded_message))

	local runtime_message = runtime_messages:message_received(client_id, decoded_message)

	if runtime_qualifier == omgruntime.constants.LOBBY then
		msg.post(LOBBY_RUNTIME, runtime_messages.MESSAGE_RECEIVED, runtime_message)
	elseif runtime_qualifier == omgruntime.constants.MATCH then
		msg.post(MATCH_RUNTIME, runtime_messages.MESSAGE_RECEIVED, runtime_message)
	else
		error("[SERVER_MANAGER] Unknown runtime qualifier was received, runtime_qualifier=" .. tostring(runtime_qualifier))
	end
end

local function handle_server_event(self, event)
	print(socket.gettime() .. " [SERVER_MANAGER] Event was received, event=" .. json.encode(event))

	local event_qualifier = event.qualifier
	local event_body = event.body

	if event_qualifier == omgruntime.constants.SERVER_STARTED then
		local runtime_qualifier = event_body.runtime_qualifier
		server_started(self, runtime_qualifier)
		
	elseif event_qualifier == omgruntime.constants.COMMAND_RECEIVED then
		local command_qualifier = event_body.qualifier
		local command_body = event_body.body
		command_received(self, command_qualifier, command_body)
		
	elseif event_qualifier == omgruntime.constants.MESSAGE_RECEIVED then
		local client_id = event_body.client_id
		local decoded_message = json.decode(event_body.message)
		message_received(self, client_id, decoded_message)
		
	end
end

function init(self)
	local options = {
		event_handler = function(event) handle_server_event(self, event) end,
		debug_logging = true,
		trace_logging = false,
	}
	omgruntime:init(options)
	omgruntime:start()
end

function update(self, dt)
	omgruntime:update(dt)
end