local game_project = require("project.defold.game_project.game_project")
local lobby_screen = require("project.defold.lobby_screen.lobby_screen")
local input = require("druid.extended.input")
local druid = require("druid.druid")
druid.register("input", input)

local GAME_PROJECT = "/game_project#game_project"

local function request_joining(self)
	local nickname_input_text = self.nickname_input:get_text()
	if nickname_input_text == "" then
		self.nickname_input:set_text(self.profile.data.nickname)
	else
		game_project:join_pressed(GAME_PROJECT, nickname_input_text)
	end
end

local function join_button(self)
	request_joining(self)
end

local function setup_screen(self, profile)
	pprint(profile)
	self.profile = profile
	self.nickname_input:set_text(profile.data.nickname)
end

function init(self)
	self.druid = druid.new(self)

	local first_input = true
	self.nickname_input = self.druid:new_input("nickname_input_field", "nickname_input_text")
	self.nickname_input.max_length = 12
	self.nickname_input.on_input_select:subscribe(function(_, _)
		if first_input then
			self.nickname_input:set_text("")
			first_input = false
		end
	end)

	self.join_button = self.druid:new_button("join_button", join_button)

	print(os.date() .. " [LOBBY_SCREEN] Initialized")
end

function final(self)
	self.druid:final()
end

function update(self, dt)
	self.druid:update(dt)
end

function on_message(self, message_id, message, sender)
	self.druid:on_message(message_id, message, sender)

	if message_id == hash(lobby_screen.SETUP_SCREEN) then
		local profile = message.profile
		setup_screen(self, profile)
	end
end

function on_input(self, action_id, action)
	local result = self.druid:on_input(action_id, action)

	if action_id == hash("key_enter") and action.pressed then
		request_joining(self)
	end
	
	return result
end